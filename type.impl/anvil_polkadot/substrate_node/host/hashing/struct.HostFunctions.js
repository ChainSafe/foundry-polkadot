(function() {
    var type_impls = Object.fromEntries([["anvil_polkadot",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunctions-for-HostFunctions\" class=\"impl\"><a class=\"src rightside\" href=\"src/anvil_polkadot/substrate_node/host.rs.html#78\">Source</a><a href=\"#impl-HostFunctions-for-HostFunctions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl HostFunctions for <a class=\"struct\" href=\"anvil_polkadot/substrate_node/host/hashing/struct.HostFunctions.html\" title=\"struct anvil_polkadot::substrate_node::host::hashing::HostFunctions\">HostFunctions</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>non-<code>substrate_runtime</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.host_functions\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/anvil_polkadot/substrate_node/host.rs.html#78\">Source</a><a href=\"#method.host_functions\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">host_functions</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static dyn Function&gt;</h4></section></summary><div class='docblock'>Returns the host functions <code>Self</code> provides.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_static\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/anvil_polkadot/substrate_node/host.rs.html#78\">Source</a><a href=\"#method.register_static\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">register_static</a>&lt;T&gt;(registry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, T::Error&gt;<div class=\"where\">where\n    T: HostFunctionRegistry,</div></h4></section></summary><div class='docblock'>Statically registers the host functions.</div></details></div></details>","HostFunctions","anvil_polkadot::substrate_node::host::PublicKeyToHashOverride"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[2369]}